/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.robspassky.basic;


import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestInstance;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mockito;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.core.env.Environment;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.context.junit.jupiter.SpringJUnitConfig;

import java.util.Date;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.reset;
import static org.mockito.Mockito.when;

@SpringBootTest
@ExtendWith(SpringExtension.class)
@SpringJUnitConfig
@TestInstance(TestInstance.Lifecycle.PER_CLASS)
public class FooJobTest {

    private FooJob classUnderTest;

    Environment environment = Mockito.mock(Environment.class);

    IncrementComponent incrementComponent = Mockito.spy(IncrementComponent.class);

    @BeforeEach
    public void setup() {
        classUnderTest = new FooJob(environment, incrementComponent);
    }

    @AfterEach
    public void teardown() {
        reset(environment);
        reset(incrementComponent);
    }


    @Test
    public void testCalcCurrentLine() {
        when(incrementComponent.getCount()).thenReturn(12345);
        assertEquals(12345, classUnderTest.calcCurrentLine());
    }

    @Test
    public void testDateToString() {
        Date d = new Date();
        d.setTime(3915000);
        assertEquals("20:05:15", classUnderTest.dateToString(d));
    }

    @Test
    public void testGetJobNAme() {
        when(environment.getRequiredProperty("samplejob.metadata.name")).thenReturn("FooTestJob");
        assertEquals("FooTestJob", classUnderTest.getJobName());
    }

}
